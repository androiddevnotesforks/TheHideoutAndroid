name: Beta Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  app_build:
    name: Github, Firebase, and Sentry Release
    runs-on: ubuntu-latest
#    outputs:
#      gplay: ${{ steps.gplay.outputs.filePath }}
    steps:
      - uses: actions/checkout@v3
      - name: Touch local properties
        run: touch local.properties

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true

      - name: Set up JDK 11
        uses: actions/setup-java@v3.9.0
        with:
          distribution: "temurin"
          java-version: "11"
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Decode Service Account Key JSON File
        uses: timheuer/base64-to-file@v1.2
        id: service_account_json_file
        with:
          fileName: "serviceAccount.json"
          encodedString: ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }}

      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1.2
        id: android_keystore
        with:
          fileName: "android_keystore.jks"
          encodedString: ${{ secrets.KEYSTORE_FILE }}

      - name: Decode Google App Credentials
        uses: timheuer/base64-to-file@v1.2
        id: google_app_credentials
        with:
          fileName: "google_app_credentials.json"
          encodedString: ${{ secrets.GOOGLE_APP_CREDENTIALS }}
          
#      - id: gplay
#        run: echo "filePath=${{ steps.google_app_credentials.outputs.filePath }}" >> $GITHUB_OUTPUT

      - name: Define version code with offset
        env:
          RUN_NUMBER: ${{ github.run_number }}
          INITIAL_VERSION_CODE: 17000
        run: echo "VERSION_CODE=$((INITIAL_VERSION_CODE + RUN_NUMBER))" >> $GITHUB_ENV

#      - name: Generate App Version Name
#        run: echo "VERSION_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
        
      - name: Setup & Build Gradle
        uses: gradle/gradle-build-action@v2
        env:
          KEYSTORE_PATH: ${{ steps.android_keystore.outputs.filePath }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_ALIAS_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          VERSION_CODE: ${{ env.VERSION_CODE }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          arguments: assembleBetaRelease
          cache-disabled: true

      - name: Create Github Pre-Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "latest"
          title: "Beta Build"
          prerelease: true
          files: |
            ./app/build/outputs/apk/beta/release/app-beta-release.apk

      - name: Create a Sentry.io release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: beta

  play_publish:
    name: Publish to Google Play
    runs-on: ubuntu-latest
    concurrency:
      group: playstore_deploy
    needs: app_build
    steps:
      - uses: actions/checkout@v3
      - name: Touch local properties
        run: touch local.properties

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true

      - name: Set up JDK 11
        uses: actions/setup-java@v3.9.0
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Decode Service Account Key JSON File
        uses: timheuer/base64-to-file@v1
        id: service_account_json_file
        with:
          fileName: "serviceAccount.json"
          encodedString: ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }}

      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1
        id: android_keystore
        with:
          fileName: "android_keystore.jks"
          encodedString: ${{ secrets.KEYSTORE_FILE }}

      - name: Decode Google App Credentials
        uses: timheuer/base64-to-file@v1
        id: google_app_credentials
        with:
          fileName: "google_app_credentials.json"
          encodedString: ${{ secrets.GOOGLE_APP_CREDENTIALS }}

      - name: Define version code with offset
        env:
          RUN_NUMBER: ${{ github.run_number }}
          INITIAL_VERSION_CODE: 17000
        run: |
          VERSION_CODE=$((INITIAL_VERSION_CODE + RUN_NUMBER))
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

#      - name: Generate App Version Name
#        run: echo "VERSION_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Setup & Build Gradle
        uses: gradle/gradle-build-action@v2
        env:
          KEYSTORE_PATH: ${{ steps.android_keystore.outputs.filePath }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEYSTORE_ALIAS_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          VERSION_CODE: ${{ env.VERSION_CODE }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          arguments: bundleBetaRelease
          cache-disabled: true

      - name: Build & deploy Android beta release
        run: bundle exec fastlane android internal
        env:
          ANDROID_JSON_KEY_FILE: ${{ steps.service_account_json_file.outputs.filePath }}
          GOOGLE_APP_CREDENTIALS: ${{ steps.google_app_credentials.outputs.filePath }}
