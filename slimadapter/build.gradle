plugins {
    id "com.jfrog.bintray" version "1.7.3"
    //id "com.github.dcendents.android-maven" version "1.5"
}
apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 17
        versionName "3.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

group = 'net.idik'
version = '2.1.2'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def siteUrl = 'https://github.com/MEiDIK/SlimAdapter'
def gitUrl = 'https://github.com/MEiDIK/SlimAdapter.git'

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = 'SlimAdapter'
        name = 'SlimAdapter'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['MIT']
        userOrg = 'idik-net'
        publish = true

        version {
            name = '2.1.2'
            desc = 'New Feature: SlimAdapterEx'
            released = new Date()
            vcsTag = 'v2.1.2'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    configurations = ['archives']
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
}
repositories {
    mavenCentral()
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
//    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}