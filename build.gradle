// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        versions = [
                aboutLibs         : "8.6.3",
                androidText       : "0.6",
                annotation        : '1.5.0',
                appcompat         : '1.6.0',
                cardview          : '1.0.0',
                constraintLayout  : '2.1.4',
                core              : '1.3.2',
                detekt            : '1.14.2',
                drawerlayout      : '1.1.1',
                epoxy             : "4.1.0",
                fastadapter       : "5.3.2",
                firebaseBOM       : "31.1.1",
                hilt              : "2.31.2-alpha",
                iconics           : "5.2.1",
                kotlin            : '1.7.20',
                ktx               : '1.9.0',
                material          : '1.7.0',
                materialDrawer    : '8.4.3',
                mDialogs          : "3.3.0",
                multiDex          : '2.0.1',
                navigation        : '2.5.3',
                recyclerView      : '1.2.1',
                room              : "2.5.0",
                slidingpaneLayout : "1.1.0",
                swiperefreshLayout: "1.1.0",
        ]
        compose_version = '1.3.3'
        accompanist = '0.28.0'
        prefs = "0.5.2"
        setup = [
                compileSdk       : 31,
                enableViewBinding: true,
                minSdk           : 21,
                targetSdk        : 31
        ]
        androidx = [
                appcompat          : "1.2.0",
                constraintLayout   : "2.0.2",
                core               : "1.8.0",
                datastorePrefs     : "1.0.0",
                fragment           : "1.0.0",
                kotlinSerialization: "1.1.0",
                lifecycle          : "2.5.0",
                material           : "1.6.1",
                palette            : "1.0.0",
                preference         : "1.0.0",
                recyclerview       : "1.2.1",
                startup            : "1.1.1",
                supportv4          : "1.0.0",
        ]
        material_prefs = '1.1.2'
    }

    repositories {
        google()
        mavenCentral()
        maven { url 'https://androidx.dev/snapshots/builds/8003490/artifacts/repository' }
        maven { url "https://maven.localazy.com/repository/release/" }
    }

    dependencies {
        classpath "com.localazy:gradle:1.5.3"
        classpath 'com.android.tools.build:gradle:7.4.0'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20'
        classpath 'com.google.gms:google-services:4.3.14'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.44.2"
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.6'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += [
                    // Avoid having to stutter experimental annotations all over the codebase
                    "-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi",
                    "-Xopt-in=androidx.compose.material.ExperimentalMaterialApi",
                    "-Xopt-in=androidx.compose.runtime.ExperimentalComposeApi",
                    "-Xopt-in=androidx.compose.ui.ExperimentalComposeUiApi",
                    "-Xopt-in=com.google.accompanist.navigation.material.ExperimentalMaterialNavigationApi",
                    "-Xopt-in=com.google.accompanist.pager.ExperimentalPagerApi",
                    "-Xopt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi",
                    "-Xopt-in=kotlin.ExperimentalUnsignedTypes",
                    "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                    "-Xopt-in=kotlinx.coroutines.InternalCoroutinesApi"
            ]
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}